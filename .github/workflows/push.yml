name: Git Autodeploy CI

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  build_and_run_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Validate composer.json and composer.lock
      run: composer validate --strict
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    - name: Run test suite
      run: composer run-script test

  lint-php-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Lint PHP code (Dry Run)
        run: ./linter/lint.sh --dry-run

  deploy:
    runs-on: ubuntu-latest
    needs: [build_and_run_tests, lint-php-code]
    if: success()
    steps:
      - name: Deploy to Server
        env:
            AUTODEPLOY_URL: ${{ vars.AUTODEPLOY_URL }}
            KEY_FILE_FOR_DEPLOY: ${{ secrets.KEY_FILE_FOR_DEPLOY }}
        run: |
            response=$(curl -X POST \
                -H "Content-Type: application/json" \
                -d '{
                    "repo": "github-autodeploy",
                    "key": "'"${KEY_FILE_FOR_DEPLOY}"'",
                    "run_in_background": true,
                    "commit": {
                        "sha": "'"${{ github.sha }}"'",
                        "author": "'"${{ github.actor }}"'"
                    }
                    }' \
                -s -o response_body.txt -w "%{http_code}" \
                --fail \
                "https://${AUTODEPLOY_URL}?repo=github-autodeploy&key=${KEY_FILE_FOR_DEPLOY}")

            cat response_body.txt

            if [ "$response" -ge 400 ]; then
                echo "Request failed with status code $response"
                exit 1
            fi
